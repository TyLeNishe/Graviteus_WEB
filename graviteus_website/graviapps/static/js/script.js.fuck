/* ========== СЛАЙДЕР ========== */
const slider = document.querySelector('.slider');
const slides = document.querySelectorAll('.slide');
const btnPrev = document.querySelector('.prev');
const btnNext = document.querySelector('.next');

let currentIndex = 1;
let isAnimating = false;
const totalSlides = slides.length;

function updateSlider() {
    slider.style.transform = `translateX(-${currentIndex * 50}%)`;
}

function handleTransitionEnd() {
    isAnimating = false;

    if (currentIndex === 0) {
        currentIndex = totalSlides - 2;
        slider.style.transition = 'none';
        updateSlider();
        setTimeout(() => slider.style.transition = 'transform 0.5s ease-in-out');
    } else if (currentIndex === totalSlides - 1) {
        currentIndex = 1;
        slider.style.transition = 'none';
        updateSlider();
        setTimeout(() => slider.style.transition = 'transform 0.5s ease-in-out');
    }
}

btnNext.addEventListener('click', () => {
    if (isAnimating) return;
    isAnimating = true;
    currentIndex++;
    slider.style.transition = 'transform 0.5s ease-in-out';
    updateSlider();
});

btnPrev.addEventListener('click', () => {
    if (isAnimating) return;
    isAnimating = true;
    currentIndex--;
    slider.style.transition = 'transform 0.5s ease-in-out';
    updateSlider();
});

slider.addEventListener('transitionend', handleTransitionEnd);
slider.style.transform = `translateX(-${currentIndex * 50}%)`;

/* ========== ФОН ПРИ СКРОЛЛЕ ========== */
const body = document.body;
const maxScroll = document.documentElement.scrollHeight - window.innerHeight;
const colorStops = [
    { pos: 0.0, color: [35, 40, 62] },
    { pos: 0.5, color: [0, 0, 0] },
    { pos: 1.0, color: [87, 41, 43] }
];

function interpolateColor(progress) {
    for (let i = 1; i < colorStops.length; i++) {
        if (progress <= colorStops[i].pos) {
            const prev = colorStops[i - 1];
            const next = colorStops[i];
            const t = (progress - prev.pos) / (next.pos - prev.pos);

            return [
                Math.round(prev.color[0] + t * (next.color[0] - prev.color[0])),
                Math.round(prev.color[1] + t * (next.color[1] - prev.color[1])),
                Math.round(prev.color[2] + t * (next.color[2] - prev.color[2]))
            ];
        }
    }
    return colorStops[colorStops.length - 1].color;
}

window.addEventListener('scroll', () => {
    const scrollProgress = window.pageYOffset / maxScroll;
    const [r, g, b] = interpolateColor(scrollProgress);
    body.style.backgroundColor = `rgb(${r},${g},${b})`;
});

/* ========== МОДАЛЬНЫЕ ОКНА ========== */
function openModal(title, event) {
    event.stopPropagation();
    const modal = document.getElementById('modal');
    const modalTitle = document.getElementById('modal-title');
    modalTitle.textContent = title;
    modal.style.display = 'flex';
    document.body.classList.add('modal-open');
}

const modal = document.getElementById('modal');
modal.addEventListener('click', (event) => {
    if (event.target === modal) {
        modal.style.display = 'none';
        document.body.classList.remove('modal-open');
    }
});

/* ========== АККОРДЕОН ========== */
const accordionItems = document.querySelectorAll('.accordion-item');

accordionItems.forEach(item => {
    const header = item.querySelector('.accordion-header');
    header.addEventListener('click', () => {
        accordionItems.forEach(otherItem => {
            if (otherItem !== item && otherItem.classList.contains('active')) {
                otherItem.classList.remove('active');
            }
        });
        item.classList.toggle('active');
    });
});

/* ========== АВАТАР ========== */
function handleAvatarChange(event) {
    const file = event.target.files[0];
    if (file) {
        const reader = new FileReader();
        reader.onload = function (e) {
            const avatarPreview = document.getElementById('avatar-preview');
            avatarPreview.src = e.target.result;
        };
        reader.readAsDataURL(file);

        document.getElementById('avatar-form').submit();
    }
}

/* ========== РЕДАКТИРОВАНИЕ ПОЧТЫ ========== */
function toggleEmailEdit() {
    const emailValue = document.getElementById('email-value');
    const emailInput = document.getElementById('email-input');

    if (emailValue.style.display !== 'none') {
        emailValue.style.display = 'none';
        emailInput.style.display = 'inline';
        emailInput.value = emailValue.textContent;
        emailInput.focus();
    } else {
        emailValue.style.display = 'inline';
        emailInput.style.display = 'none';
    }
}

function saveEmail() {
    const emailValue = document.getElementById('email-value');
    const emailInput = document.getElementById('email-input');
    const newEmail = emailInput.value.trim();

    if (newEmail) {
        const form = document.createElement('form');
        form.method = 'POST';
        form.action = document.getElementById('update-email-url').dataset.url;
        form.style.display = 'none';

        const csrfInput = document.createElement('input');
        csrfInput.type = 'hidden';
        csrfInput.name = 'csrfmiddlewaretoken';
        csrfInput.value = document.getElementById('csrf-token').dataset.csrf;
        form.appendChild(csrfInput);

        const emailInputForm = document.createElement('input');
        emailInputForm.type = 'hidden';
        emailInputForm.name = 'email';
        emailInputForm.value = newEmail;
        form.appendChild(emailInputForm);

        document.body.appendChild(form);
        form.submit();
    }
}

function cancelEmailEdit() {
    const emailValue = document.getElementById('email-value');
    const emailInput = document.getElementById('email-input');

    emailValue.style.display = 'inline';
    emailInput.style.display = 'none';
}

document.getElementById('email-input').addEventListener('keydown', function (event) {
    if (event.key === 'Enter') {
        saveEmail();
    } else if (event.key === 'Escape') {
        cancelEmailEdit();
    }
});

/* ========== РЕДАКТИРОВАНИЕ ИМЕНИ ПОЛЬЗОВАТЕЛЯ ========== */
function toggleUsernameEdit() {
    const usernameValue = document.getElementById('username-value');
    const usernameInput = document.getElementById('username-input');

    if (usernameValue.style.display !== 'none') {
        usernameValue.style.display = 'none';
        usernameInput.style.display = 'inline';
        usernameInput.value = usernameValue.textContent;
        usernameInput.focus();
    } else {
        usernameValue.style.display = 'inline';
        usernameInput.style.display = 'none';
    }
}

function saveUsername() {
    const usernameValue = document.getElementById('username-value');
    const usernameInput = document.getElementById('username-input');
    const newUsername = usernameInput.value.trim();

    if (newUsername) {
        const form = document.createElement('form');
        form.method = 'POST';
        form.action = document.getElementById('update-username-url').dataset.url;
        form.style.display = 'none';

        const csrfInput = document.createElement('input');
        csrfInput.type = 'hidden';
        csrfInput.name = 'csrfmiddlewaretoken';
        csrfInput.value = document.getElementById('csrf-token').dataset.csrf;
        form.appendChild(csrfInput);

        const usernameInputForm = document.createElement('input');
        usernameInputForm.type = 'hidden';
        usernameInputForm.name = 'username';
        usernameInputForm.value = newUsername;
        form.appendChild(usernameInputForm);

        document.body.appendChild(form);
        form.submit();
    } else {
        alert('Имя пользователя не может быть пустым.');
    }
}

function cancelUsernameEdit() {
    const usernameValue = document.getElementById('username-value');
    const usernameInput = document.getElementById('username-input');

    usernameValue.style.display = 'inline';
    usernameInput.style.display = 'none';
}

document.getElementById('username-input').addEventListener('keydown', function (event) {
    if (event.key === 'Enter') {
        saveUsername();
    } else if (event.key === 'Escape') {
        cancelUsernameEdit();
    }
});

/* ========== ФУНКЦИОНАЛ ФОРМ АВТОРИЗАЦИИ ========== */
function setupPasswordToggles() {
    document.querySelectorAll('.toggle-password').forEach(toggle => {
        toggle.addEventListener('click', function () {
            const input = this.closest('.password-input-wrapper').querySelector('input');
            const icon = this.querySelector('i');

            if (input.type === "password") {
                input.type = "text";
                icon.classList.remove('fa-eye');
                icon.classList.add('fa-eye-slash');
            } else {
                input.type = "password";
                icon.classList.remove('fa-eye-slash');
                icon.classList.add('fa-eye');
            }
        });
    });
}

/* ========== TOGGLE PASSWORD VISIBILITY ========== */
function initPasswordToggles() {
    document.querySelectorAll('.toggle-password').forEach(toggle => {
        toggle.addEventListener('click', function(e) {
            e.preventDefault();
            const wrapper = this.closest('.password-input-wrapper');
            const input = wrapper.querySelector('input');
            const icon = this.querySelector('i');
            
            if (input.type === "password") {
                input.type = "text";
                icon.classList.replace('fa-eye', 'fa-eye-slash');
            } else {
                input.type = "password";
                icon.classList.replace('fa-eye-slash', 'fa-eye');
            }
        });
    });
}

document.addEventListener('DOMContentLoaded', function() {
    initPasswordToggles();
});

// Инициализация при загрузке страницы
document.addEventListener('DOMContentLoaded', function () {
    setupPasswordToggles();
});